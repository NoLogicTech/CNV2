@page "/tcliente"
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations


<MudCard>

    <MudCardContent>
        <MudText Typo="Typo.h4">Registo de Clientes</MudText>
        <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
            <MudTextField T="string" Label="NIPC" Required="true"
                RequiredError="É obrigatório colocar o número de contribuinte!" />
            <MudTextField T="string" Label="ERP ID" Required="false" />
            <MudTextField T=" string" Label="Nome do Cliente" Required="true"
                RequiredError="É obrigatório colocar o nome do cliente!" />
        </MudForm>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary">Inserir
        </MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" style="margin-left: 5px;">Cancelar
        </MudButton>
    </MudCardActions>
</MudCard>

<TCliente_Table />

@code {
    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;

    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one digit";
    }

    private string PasswordMatch(string arg)
    {
        if (pwField1.Value != arg)
            return "Passwords don't match";
        return null;
    }
}
